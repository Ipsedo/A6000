Devoir de compilation - Acte I.
Auteur : Samuel BERRIEN

Parties ayant été faites et fonctionnelles :

- TP 1 - Représentations intermédiaires et génération de code assembleur MIPS

- TP 2 - Analyse lexicale, analyse syntaxique
  + extensions : - Sucre syntaxique pour la boucle for.
                  Ainsi que d'autres éléments tel l'in/decrémentation ++/--,
                  la mise à jour d'une variable via l'affectation OP=
                    (+=, -=, /=, *=).
                  Le simple branchement if sans else.
                  Divers operateurs manquants ( /, >, >= ...).
                 - Aider son prochain : messages d'erreur :
                  Message d'erreur pour caractère non reconnu,
                  lexème non attendu et erreur de typage
                  (les erreur de lexèmes ne sont pas gérées par les outils
                  d'erreurs de menhir).
                 - Macros constantes (la valeur du macro est à mettre sur
                  une seule ligne).

- TP 3 - Analyse de flot de données et optimisations
  + extensions : - Calcul de point fixe avec liste de tâches, on parcourt le
                  code en "zig-zag" de bas en haut (comme vu en TD) ce qui
                  permet d'économiser un grand nombre d'itérations.

- TP 4 - Allocation de registres par coloration de graphe (Allocation de
  registres, pour de vrai)
  + extensions : - Réutilisation d'identifiants inter-instructions.
                 - Réutilisation d'identifiants intra-expressions.

Autres informations :
- La deuxième extension du 3e TP figure dans les fichiers sources mais n'est
pas implémentée.

- Les erreurs de lexème ne retournent pas bien la colonne courante.
